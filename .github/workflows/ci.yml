name: CI Pipeline

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Generate .env file
        run: |
          echo "MONGO_USERNAME=topsecretusername" >> .env
          echo "MONGO_PASSWORD=verysecurepassword" >> .env

      - name: Generate SSL Certificates
        run: |
          chmod +x ./gen_dev_ssl_cert.sh
          ./gen_dev_ssl_cert.sh

      - name: Build and Start MongoDB Services
        run: |
          openssl rand -base64 756 > ./database/mongodb-build/auth/mongodb-keyfile
          chmod 400 ./database/mongodb-build/auth/mongodb-keyfile
          mkdir -p ./ssl
          docker-compose build
          docker-compose up -d

      - name: Wait for MongoDB Services
        run: |
          services=("router01" "configsvr01" "shard01-a" "shard02-a" "shard03-a")
          for service in "${services[@]}"; do
            until docker inspect --format '{{.State.Health.Status}}' $(docker-compose ps -q $service) | grep -q "healthy"; do
              echo "Waiting for $service to become healthy..."
              sleep 5
            done
          done

      - name: Run MongoDB Initialization Script
        run: |
          chmod +x ./database/init.sh
          ./database/init.sh

      - name: Dump Logs on Failure
        if: failure()
        run: |
          docker-compose logs > docker_logs.txt
          cat docker_logs.txt

      - name: Shutdown Docker Compose
        if: always()
        run: docker-compose down
