name: CI Pipeline

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build and start services
        run: |
          chmod +x ./gen_dev_ssl_certs.sh
          ./gen_dev_ssl_certs.sh
          docker-compose up -d --build

      - name: Wait for services to be healthy
        run: |
          chmod +x ./health-check.sh
          ./health-check.sh

      - name: Wait for services to be healthy
        run: |
          sleep 120  # Wait for 2 minutes

      - name: Run Frontend Tests
        run: sleep 5

      - name: Run Backend Tests
        run: sleep 5

      - name: Shutdown Docker Compose
        run: docker-compose down

      - name: Upload Test Coverage
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-reports
          path: |
            ./frontend/coverage
            ./backend/coverage

  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: "18"

  #     - name: Cache npm dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/.npm
  #         key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.OS }}-node-

  #     - name: Install and Lint Frontend
  #       working-directory: ./frontend
  #       run: |
  #         npm ci
  #         npm run lint

  #     - name: Install and Lint Backend
  #       working-directory: ./backend
  #       run: |
  #         npm ci
  #         npm run lint
