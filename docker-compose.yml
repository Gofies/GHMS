services:
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - WDS_SOCKET_PORT=0
      - WATCHPACK_POLLING=true
    networks:
      - gofies
    healthcheck:
      test: ["CMD", "curl", "-f", "-k", "https://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    networks:
      - gofies
    depends_on:
      - mongo
    healthcheck:
      test: ["CMD", "curl", "-f", "-k", "https://localhost/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "5000:5000"

  mongo:
    image: mongo:8.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    networks:
      - gofies
    # will need to add this volume later to map the database to the local host for presistence of data
    # volumes:
    #   - ./database/mongodb/db_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  llm:
    build:
      context: ./AI
      dockerfile: Dockerfile
    ports:
      - "3131:3131"
    networks:
      - gofies
    volumes:
      - ./AI/llm/uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "-k", "https://localhost/llm/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-logs:/var/log/nginx
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
      - llm
    networks:
      - gofies
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  gofies:
    driver: bridge
