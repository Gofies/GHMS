version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports: #might need to remove it after adding nginx webserver
      - "3000:3000"
    volumes:
      - ./frontend:/app
    environment:
      - NODE_ENV=${NODE_ENV:-development}
    networks:
      - gofies
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"] # Adjust if your frontend has a health route
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports: #might need to remove it after adding nginx webserver
      - "5000:5000"
    volumes:
      - ./backend:/app
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    networks:
      - gofies
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api"] # Adjust this based on your backend app
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports: #might need to remove it after adding nginx webserver
      - "5432:5432"
    volumes:
      - ./database/postgresql/db_data:/var/lib/postgresql/data
    networks:
      - gofies
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:5.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports: #might need to remove it after adding nginx webserver
      - "27017:27017"
    volumes:
      - ./database/mongodb/db_data:/data/db
    networks:
      - gofies
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports: #might need to remove it after adding nginx webserver
      - "6379:6379"
    volumes:
      - ./database/redis/db_data:/data
    networks:
      - gofies
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # llm:
  #   build:
  #     context: ./ai-services
  #     dockerfile: Dockerfile
  #   ports: #might need to remove it after adding nginx webserver
  #     - "8000:8000"
  #   environment:
  #     - MODEL_PATH=/app/models/model.bin
  #   networks:
  #     - gofies

  # nginx:
  #   image: nginx:latest
  #   ports:
  #     - "80:80" # Forward requests from the host to the container
  #     - "443:443" # For HTTPS, requires SSL certificates
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - frontend
  #     - backend
  #   networks:
  #     - gofies

networks:
  gofies:
    driver: bridge
