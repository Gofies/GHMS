version: "3.8"

services:
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    # ports: #might need to remove it after adding nginx webserver
    #   - "3000:3000"
    volumes:
      - ./frontend:/app
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - WDS_SOCKET_PORT=0
      - WATCHPACK_POLLING=true
    networks:
      - gofies

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    # ports: #might need to remove it after adding nginx webserver
    #   - "5000:5000"
    volumes:
      - ./backend:/app
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    networks:
      - gofies

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports: #might need to remove it after adding nginx webserver
      - "5432:5432"
    volumes:
      - ./database/postgresql/db_data:/var/lib/postgresql/data
    networks:
      - gofies
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:5.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports: #might need to remove it after adding nginx webserver
      - "27017:27017"
    volumes:
      - ./database/mongodb/db_data:/data/db
    networks:
      - gofies
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports: #might need to remove it after adding nginx webserver
      - "6379:6379"
    volumes:
      - ./database/redis/db_data:/data
    networks:
      - gofies
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-logs:/var/log/nginx
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - gofies
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  gofies:
    driver: bridge
